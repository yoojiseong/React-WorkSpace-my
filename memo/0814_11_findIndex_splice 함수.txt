findIndex()
: 주어진 조건을 만족하는 배열의 첫 번째 요소에 대한 인덱스(위치)를 반환
만약 조건을 만족하는 요소가 없다면 `-1`을 반환

기본 문법
array.findIndex(callback(element[, index[, array]])[, thisArg])
```

  - **`callback`**: 배열의 각 요소에 대해 실행할 함수입니다.
  이 함수가 `true`를 반환하면, `findIndex()`는 해당 요소의 인덱스를 반환하고 즉시 실행을 멈춥니다.
      - **`element`**: 현재 처리 중인 배열의 요소입니다.
      - **`index`** (선택 사항): 현재 처리 중인 요소의 인덱스입니다.
      - **`array`** (선택 사항): `findIndex()`가 호출된 배열입니다.
  - **`thisArg`** (선택 사항): `callback` 함수를 실행할 때 `this`로 사용할 값입니다.

예시)
const numbers = [5, 12, 8, 130, 44];

// 10보다 큰 첫 번째 숫자의 인덱스를 찾습니다.
const isLargeNumber = (element) => element > 10;

const foundIndex = numbers.findIndex(isLargeNumber);

console.log(foundIndex); // 출력: 1 (12는 인덱스 1에 위치)

================================================================
splice()
:배열의 기존 요소를 1)삭제 또는 2)교체하거나 새 요소를 3)추가하기

기본 문법
array.splice(start[, deleteCount[, item1[, item2[, ...]]]])
```

  - **`start`**: 배열 변경을 시작할 인덱스입니다.
  - **`deleteCount`** (선택 사항): `start` 인덱스부터
  제거할 요소의 개수입니다. 지정하지 않으면 `start`부터 배열의 끝까지 모든 요소를 제거합니다.
  - **`item1, item2, ...`** (선택 사항): 배열에 추가할 요소입니다.
   `start` 인덱스 위치에 추가됩니다.

*예시 1: 요소 제거하기**

```javascript
const months = ['Jan', 'March', 'April', 'June'];

// 인덱스 1에서 1개의 요소를 제거합니다.
months.splice(1, 1);

console.log(months); // 출력: ["Jan", "April", "June"]

**예시 2: 요소 추가하기**

`deleteCount`를 `0`으로 설정하면 아무것도 제거하지 않고 요소를 추가할 수 있습니다.

```javascript
const animals = ['dog', 'cat', 'bird'];

// 인덱스 1에 'bear'를 추가합니다.
animals.splice(1, 0, 'bear');

console.log(animals); // 출력: ["dog", "bear", "cat", "bird"]


**예시 3: 요소 교체하기**

요소를 제거하는 동시에 새로운 요소를 추가하여 교체할 수 있습니다.

```javascript
const fruits = ['apple', 'banana', 'cherry'];

// 인덱스 1의 요소 1개를 제거하고 'mango'를 추가합니다.
fruits.splice(1, 1, 'mango');

console.log(fruits); // 출력: ["apple", "mango", "cherry"]












